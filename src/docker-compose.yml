version: '3.4'

services:
   gateway.api:
     image: ${DOCKER_REGISTRY-}gatewayapi
     build:
       context: .
       dockerfile: Gateway/Gateway.API/Dockerfile
     networks:
        - mynetworks

   catalogdb:
      image: postgres
      networks:
        - mynetworks

   basketdb:
      image: postgres
      networks:
        - mynetworks

   distributedcache:
      image: redis
      networks:
        - mynetworks

   orderdb:
      image: mcr.microsoft.com/mssql/server
      networks:
        - mynetworks

   mongodb:
      image: mongo
      networks:
        - mynetworks

   messagebroker:
      image: rabbitmq:management
      networks:
        - mynetworks


   catalog.api:
      image: ${DOCKER_REGISTRY-}catalogapi
      build:
        context: .
        dockerfile: Services/Catalog/Catalog.API/Dockerfile
      networks:
        - mynetworks



   basket.api:
      image: ${DOCKER_REGISTRY-}basketapi
      build:
          context: .
          dockerfile: Services/Basket/Basket.API/Dockerfile
      networks:
        - mynetworks

   discount.grpc:
     image: ${DOCKER_REGISTRY-}discountgrpc
     build:
       context: .
       dockerfile: Services/Discount/Discount.Grpc/Dockerfile
     networks:
        - mynetworks

   ordering.api:
     image: ${DOCKER_REGISTRY-}orderingapi
     build:
       context: .
       dockerfile: Services/Ordering/Ordering.API/Dockerfile
     networks:
        - mynetworks

   

volumes:
  postgres_catalog:
  postgres_basket:
  mongo_user:
networks:
  mynetworks:
    name: mynetworks
    driver: bridge




